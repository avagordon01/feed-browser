#!/usr/bin/env python3
import os
import sys
import feedparser
import concurrent.futures
import time
import webbrowser

config_dir = os.environ.get('XDG_CONFIG_HOME') or os.path.expandvars(os.path.join('$HOME', '.config'))
config_dir = os.path.join(config_dir, 'feed-browser')
config_filename = os.path.join(config_dir, 'last-read.txt')
try:
    with open(config_filename) as config_file:
        last_read = time.strptime(config_file.read().strip())
except Exception as e:
    print(e)
    sys.exit()

rss_urls = []
with open(os.path.join(config_dir, 'feeds.txt')) as feeds_file:
    rss_urls = feeds_file.readlines()
rss_urls = set(rss_urls)

def load_url(rss_url):
    return feedparser.parse(rss_url)
with concurrent.futures.ThreadPoolExecutor(max_workers = 256) as executor:
    feeds = executor.map(load_url, rss_urls)

entries = [item for feed in feeds for item in feed['items']]

def entry_time(entry):
    if 'published_parsed' in entry:
        return entry['published_parsed']
    elif 'updated_parsed' in entry:
        return entry['updated_parsed']
    else:
        return time.gmtime(0)
links = sorted([x.link for x in entries if entry_time(x) > last_read], key=entry_time)

os.environ['BROWSER'] = ''
[webbrowser.open(link) for link in links]

if len(links) > 0:
    last_read = time.gmtime()
    with open(config_filename, 'w') as config_file:
        config_file.write(time.asctime(last_read))
